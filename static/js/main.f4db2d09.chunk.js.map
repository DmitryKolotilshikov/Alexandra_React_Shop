{"version":3,"sources":["pages/Login/Login.module.css","pages/Registration/Registration.module.css","pages/Car/Car.tsx","pages/Cars/Cars.tsx","pages/Cart/Cart.tsx","pages/Error404/Error404.tsx","bll/reducers/registrationReducer.ts","bll/select.ts","pages/Login/Login.tsx","pages/Profile/Profile.tsx","pages/Registration/Registration.tsx","pages/PageRoutes/PageRoutes.tsx","bll/store.ts","bll/redirect.ts","pages/NavBar/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/NavBar/NavBar.module.css"],"names":["module","exports","Car","redirect","Cars","Cart","Error404","initRegState","email","password","isLoading","error","setEmail","type","setPassword","setError","select","state","registration","Login","dispatch","useDispatch","navigate","useNavigate","useSelector","useEffect","PATH","PROFILE","className","s","main","table","initialValues","validate","values","errors","test","length","onSubmit","setSubmitting","passwordLocal","localStorage","getItem","emailLocal","checkEmailPassword","touched","handleChange","handleBlur","handleSubmit","isSubmitting","placeholder","name","onChange","onBlur","value","disabled","Profile","Registration","setItem","setEmailPassword","REGISTRATION","LOGIN","CAR","CARS","CART","ERROR404","PageRoutes","path","element","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","passwordRegistrReducer","emailRegistrReducer","getState","NavBar","menu","isActive","activeNavLink","to","onClick","clear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4db2d09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__1TYkj\",\"table\":\"Login_table__388WS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Registration_main__b_1q-\",\"table\":\"Registration_table__2-nSJ\"};","import React from 'react';\r\nimport { redirect } from '../../bll/redirect';\r\n\r\nexport const Car: React.FC = () => {\r\n  redirect();\r\n  return (\r\n    <div>\r\n      <p>Car component</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { redirect } from '../../bll/redirect';\r\n\r\nexport const Cars: React.FC = () => {\r\n  redirect();\r\n  return (\r\n    <div>\r\n      <p>Cars component</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { redirect } from '../../bll/redirect';\r\n\r\nexport const Cart: React.FC = () => {\r\n  redirect();\r\n  return (\r\n    <div>\r\n      <p>Cart component</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Error404: React.FC = () => (\r\n  <div>\r\n    <p>Error404 component</p>\r\n  </div>\r\n);\r\n","import { Dispatch } from 'redux';\r\n\r\nconst initRegState = {\r\n  email: '',\r\n  password: '',\r\n  isLoading: false,\r\n  error: ''\r\n};\r\n\r\nexport const registReducer = (\r\n  state: typeof initRegState = initRegState,\r\n  action: ActionType\r\n): typeof initRegState => {\r\n  switch (action.type) {\r\n    case 'REGISTER-SET-EMAIL':\r\n      return { ...state, email: action.email };\r\n    case 'REGISTER-SET-PASSWORD':\r\n      return { ...state, password: action.password };\r\n    case 'REGISTER-SET-LOADING':\r\n      return { ...state, isLoading: action.isLoading };\r\n    case 'REGISTER-SET-ERROR':\r\n      return { ...state, error: action.error };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// actions\r\nexport const setEmail = (email: string) =>\r\n  ({ type: 'REGISTER-SET-EMAIL', email } as const);\r\nexport const setPassword = (password: string) =>\r\n  ({ type: 'REGISTER-SET-PASSWORD', password } as const);\r\nexport const setLoading = (isLoading: boolean) =>\r\n  ({ type: 'REGISTER-SET-LOADING', isLoading } as const);\r\nexport const setError = (error: string) =>\r\n  ({ type: 'REGISTER-SET-ERROR', error } as const);\r\n// type\r\nexport type ActionType =\r\n  | ReturnType<typeof setEmail>\r\n  | ReturnType<typeof setPassword>\r\n  | ReturnType<typeof setLoading>\r\n  | ReturnType<typeof setError>;\r\n\r\n// thunk\r\n// registration\r\nexport const setEmailPassword =\r\n  (email: string, password: string) => (dispatch: Dispatch) => {\r\n    localStorage.setItem('email', email);\r\n    localStorage.setItem('password', password);\r\n    dispatch(setEmail(email));\r\n    dispatch(setPassword(password));\r\n  };\r\n\r\n// login\r\nexport const checkEmailPassword =\r\n  (email: string, password: string) => (dispatch: Dispatch) => {\r\n    const passwordLocal = localStorage.getItem('password');\r\n    const emailLocal = localStorage.getItem('email');\r\n    if (passwordLocal && passwordLocal === password) {\r\n      dispatch(setPassword(password));\r\n      dispatch(setError(''));\r\n    } else {\r\n      dispatch(setError('Password is not correct'));\r\n    }\r\n    if (emailLocal && emailLocal === email) {\r\n      dispatch(setEmail(email));\r\n    } else {\r\n      dispatch(setError('Email is not correct'));\r\n    }\r\n  };\r\n\r\n// delete account\r\nexport const deleteEmailPassword = () => (dispatch: Dispatch) => {\r\n  localStorage.clear();\r\n  dispatch(setEmail(''));\r\n  dispatch(setPassword(''));\r\n};\r\n","import { AppStateType } from './store';\r\n\r\nexport const select = (state: AppStateType) => state.registration;\r\n","import { Formik, FormikErrors } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { redirect } from '../../bll/redirect';\r\nimport { checkEmailPassword } from '../../bll/reducers/registrationReducer';\r\nimport { select } from '../../bll/select';\r\nimport { PATH } from '../PageRoutes/PageRoutes';\r\n\r\nimport s from './Login.module.css';\r\n\r\ntype FormValues = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport const Login: React.FC = () => {\r\n  redirect();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { password, email, error } = useSelector(select);\r\n\r\n  useEffect(() => {\r\n    if (password && email) {\r\n      navigate(PATH.PROFILE);\r\n    }\r\n  }, [password, email]);\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.table}>\r\n        <h1>Login page</h1>\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: ''\r\n          }}\r\n          validate={(values) => {\r\n            const errors: FormikErrors<FormValues> = {};\r\n            if (!values.email) {\r\n              errors.email = 'Required';\r\n            } else if (!values.password) {\r\n              errors.password = 'Required';\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n              errors.password = 'Required';\r\n            } else if (values.password.length > 5) {\r\n              errors.password = 'Must be 5 characters or less';\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setSubmitting(false);\r\n            dispatch(checkEmailPassword(values.email, values.password));\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n            /* and other goodies */\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                placeholder='Email'\r\n                type='email'\r\n                name='email'\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.email}\r\n              />\r\n              <div>{errors.email && touched.email && errors.email}</div>\r\n              <input\r\n                placeholder='Password'\r\n                type='password'\r\n                name='password'\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.password}\r\n              />\r\n              <div>\r\n                {errors.password && touched.password && errors.password}\r\n              </div>\r\n              <div>\r\n                <button type='submit' disabled={isSubmitting}>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n        {error}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { redirect } from '../../bll/redirect';\r\n\r\nexport const Profile: React.FC = () => {\r\n  redirect();\r\n  return (\r\n    <div>\r\n      <p>Profile component</p>\r\n    </div>\r\n  );\r\n};\r\n","import { Formik, FormikErrors } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { redirect } from '../../bll/redirect';\r\nimport { setEmailPassword } from '../../bll/reducers/registrationReducer';\r\nimport { select } from '../../bll/select';\r\nimport { PATH } from '../PageRoutes/PageRoutes';\r\nimport s from './Registration.module.css';\r\n\r\ntype FormValues = {\r\n  email: string;\r\n  password: string;\r\n};\r\nexport const Registration: React.FC = () => {\r\n  redirect();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { password, email } = useSelector(select);\r\n\r\n  useEffect(() => {\r\n    if (password && email) {\r\n      navigate(PATH.PROFILE);\r\n    }\r\n  }, [password, email]);\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.table}>\r\n        <h1>Registration page</h1>\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: ''\r\n          }}\r\n          validate={(values) => {\r\n            const errors: FormikErrors<FormValues> = {};\r\n            if (!values.email) {\r\n              errors.email = 'Required';\r\n            } else if (!values.password) {\r\n              errors.password = 'Required';\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n              errors.password = 'Required';\r\n            } else if (values.password.length > 5) {\r\n              errors.password = 'Must be 5 characters or less';\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setSubmitting(false);\r\n            dispatch(setEmailPassword(values.email, values.password));\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n            /* and other goodies */\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                placeholder='Email'\r\n                type='email'\r\n                name='email'\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.email}\r\n              />\r\n              <div>{errors.email && touched.email && errors.email}</div>\r\n              <input\r\n                placeholder='Password'\r\n                type='password'\r\n                name='password'\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.password}\r\n              />\r\n              <div>\r\n                {errors.password && touched.password && errors.password}\r\n              </div>\r\n              <div>\r\n                <button type='submit' disabled={isSubmitting}>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { Car } from '../Car/Car';\r\nimport { Cars } from '../Cars/Cars';\r\nimport { Cart } from '../Cart/Cart';\r\nimport { Error404 } from '../Error404/Error404';\r\nimport { Login } from '../Login/Login';\r\nimport { Profile } from '../Profile/Profile';\r\nimport { Registration } from '../Registration/Registration';\r\n\r\nexport const PATH = {\r\n  REGISTRATION: '/regist',\r\n  LOGIN: '/login',\r\n  CAR: '/car',\r\n  CARS: '/cars',\r\n  CART: '/cart',\r\n  PROFILE: '/profile',\r\n  ERROR404: '*'\r\n};\r\nexport const PageRoutes: React.FC = () => (\r\n  <Routes>\r\n    <Route path={PATH.PROFILE} element={<Profile />} />\r\n    <Route path={PATH.REGISTRATION} element={<Registration />} />\r\n    <Route path={PATH.LOGIN} element={<Login />} />\r\n    <Route path={PATH.CAR} element={<Car />} />\r\n    <Route path={PATH.CARS} element={<Cars />} />\r\n    <Route path={PATH.CART} element={<Cart />} />\r\n    <Route path={PATH.ERROR404} element={<Error404 />} />\r\n  </Routes>\r\n);\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { registReducer } from './reducers/registrationReducer';\r\n\r\nconst rootReducer = combineReducers({ registration: registReducer });\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { PATH } from '../pages/PageRoutes/PageRoutes';\r\nimport { store } from './store';\r\n\r\nexport const redirect = () => {\r\n  let passwordLocal;\r\n  let emailLocal;\r\n  let passwordRegistrReducer;\r\n  let emailRegistrReducer;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    passwordLocal = localStorage.getItem('password');\r\n    emailLocal = localStorage.getItem('email');\r\n    passwordRegistrReducer = store.getState().registration.password;\r\n    emailRegistrReducer = store.getState().registration.email;\r\n\r\n    if (!passwordLocal && !emailLocal) {\r\n      navigate(PATH.REGISTRATION);\r\n    } else if (\r\n      passwordLocal &&\r\n      emailLocal &&\r\n      !passwordRegistrReducer &&\r\n      !emailRegistrReducer\r\n    ) {\r\n      navigate(PATH.LOGIN);\r\n    }\r\n  }, [passwordLocal, emailLocal, passwordRegistrReducer, emailRegistrReducer]);\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { redirect } from '../../bll/redirect';\r\nimport { deleteEmailPassword } from '../../bll/reducers/registrationReducer';\r\nimport { PATH } from '../PageRoutes/PageRoutes';\r\nimport s from './NavBar.module.css';\r\n\r\nexport const NavBar: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const deleteAccount = () => {\r\n    dispatch(deleteEmailPassword());\r\n    navigate(PATH.REGISTRATION);\r\n  };\r\n  redirect();\r\n\r\n  return (\r\n    <nav className={s.main}>\r\n      <ul className={s.menu}>\r\n        <li>\r\n          <NavLink\r\n            className={({ isActive }) => (isActive ? s.activeNavLink : '')}\r\n            to={PATH.CAR}\r\n          >\r\n            Car\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            className={({ isActive }) => (isActive ? s.activeNavLink : '')}\r\n            to={PATH.CARS}\r\n          >\r\n            Cars\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            className={({ isActive }) => (isActive ? s.activeNavLink : '')}\r\n            to={PATH.CART}\r\n          >\r\n            Cart\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            className={({ isActive }) => (isActive ? s.activeNavLink : '')}\r\n            to={PATH.PROFILE}\r\n          >\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            className={({ isActive }) => (isActive ? s.activeNavLink : '')}\r\n            to={PATH.LOGIN}\r\n          >\r\n            Login\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            className={({ isActive }) => (isActive ? s.activeNavLink : '')}\r\n            to={PATH.REGISTRATION}\r\n          >\r\n            Registration\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            className={({ isActive }) => (isActive ? s.activeNavLink : '')}\r\n            to={PATH.ERROR404}\r\n          >\r\n            Error404\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n      <button type='button' onClick={deleteAccount}>\r\n        Delete Account\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { NavBar } from './pages/NavBar/NavBar';\r\nimport { PageRoutes } from './pages/PageRoutes/PageRoutes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='.app'>\r\n      <NavBar />\r\n      <PageRoutes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from './bll/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NavBar_main__1fgF3\",\"menu\":\"NavBar_menu__MHPr-\",\"activeNavLink\":\"NavBar_activeNavLink__3TO0w\"};"],"sourceRoot":""}